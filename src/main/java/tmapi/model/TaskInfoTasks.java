/*
 * Megaputer Text Mining API
 * Megaputer Text Mining API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tmapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaskInfoTasks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-20T13:29:48.384+03:00[Europe/Moscow]")
public class TaskInfoTasks {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private String modified;

  public static final String SERIALIZED_NAME_LAST_ACCESSED = "lastAccessed";
  @SerializedName(SERIALIZED_NAME_LAST_ACCESSED)
  private String lastAccessed;

  public static final String SERIALIZED_NAME_DONE = "done";
  @SerializedName(SERIALIZED_NAME_DONE)
  private Integer done;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private String error;

  public TaskInfoTasks id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An identifier of the task, which this element shows information about
   * @return id
  **/
  @ApiModelProperty(value = "An identifier of the task, which this element shows information about")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TaskInfoTasks created(String created) {
    this.created = created;
    return this;
  }

   /**
   * UTC time of the task creation (not starting time, since starting time may be delayed)
   * @return created
  **/
  @ApiModelProperty(value = "UTC time of the task creation (not starting time, since starting time may be delayed)")
  public String getCreated() {
    return created;
  }

  public void setCreated(String created) {
    this.created = created;
  }

  public TaskInfoTasks modified(String modified) {
    this.modified = modified;
    return this;
  }

   /**
   * UTC time when the task data were changed. Typically it is the time when the value in the done parameter were changed. If done&#x3D; 100, then modified stores the time when the task is completed 
   * @return modified
  **/
  @ApiModelProperty(value = "UTC time when the task data were changed. Typically it is the time when the value in the done parameter were changed. If done= 100, then modified stores the time when the task is completed ")
  public String getModified() {
    return modified;
  }

  public void setModified(String modified) {
    this.modified = modified;
  }

  public TaskInfoTasks lastAccessed(String lastAccessed) {
    this.lastAccessed = lastAccessed;
    return this;
  }

   /**
   * UTC time when the task execution results were last requested. Initially this value is the time of task creation (created)
   * @return lastAccessed
  **/
  @ApiModelProperty(value = "UTC time when the task execution results were last requested. Initially this value is the time of task creation (created)")
  public String getLastAccessed() {
    return lastAccessed;
  }

  public void setLastAccessed(String lastAccessed) {
    this.lastAccessed = lastAccessed;
  }

  public TaskInfoTasks done(Integer done) {
    this.done = done;
    return this;
  }

   /**
   * Progress percentage of the task performance. When it is 100, then the task is completed. Check this parameter to find out if the task is completed or not 
   * minimum: 0
   * maximum: 100
   * @return done
  **/
  @ApiModelProperty(value = "Progress percentage of the task performance. When it is 100, then the task is completed. Check this parameter to find out if the task is completed or not ")
  public Integer getDone() {
    return done;
  }

  public void setDone(Integer done) {
    this.done = done;
  }

  public TaskInfoTasks error(String error) {
    this.error = error;
    return this;
  }

   /**
   * A task execution error. If done &#x3D; 100 and this parameter is not empty, then the task has ended with an error and it cannot provide any results 
   * @return error
  **/
  @ApiModelProperty(value = "A task execution error. If done = 100 and this parameter is not empty, then the task has ended with an error and it cannot provide any results ")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskInfoTasks taskInfoTasks = (TaskInfoTasks) o;
    return Objects.equals(this.id, taskInfoTasks.id) &&
        Objects.equals(this.created, taskInfoTasks.created) &&
        Objects.equals(this.modified, taskInfoTasks.modified) &&
        Objects.equals(this.lastAccessed, taskInfoTasks.lastAccessed) &&
        Objects.equals(this.done, taskInfoTasks.done) &&
        Objects.equals(this.error, taskInfoTasks.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, modified, lastAccessed, done, error);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskInfoTasks {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    lastAccessed: ").append(toIndentedString(lastAccessed)).append("\n");
    sb.append("    done: ").append(toIndentedString(done)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

