/*
 * Megaputer Text Mining API
 * Megaputer Text Mining API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tmapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PerOperationLimitPeriodic1Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-20T13:29:48.384+03:00[Europe/Moscow]")
public class PerOperationLimitPeriodic1Response {
  /**
   * A period when limitations apply
   */
  @JsonAdapter(NtUPeriod1Enum.Adapter.class)
  public enum NtUPeriod1Enum {
    SECOND("Second"),
    
    MINUTE("Minute"),
    
    HOUR("Hour"),
    
    DAY("Day"),
    
    MONTH("Month");

    private String value;

    NtUPeriod1Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NtUPeriod1Enum fromValue(String text) {
      for (NtUPeriod1Enum b : NtUPeriod1Enum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<NtUPeriod1Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NtUPeriod1Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NtUPeriod1Enum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return NtUPeriod1Enum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_NT_U_PERIOD1 = "NTUPeriod1";
  @SerializedName(SERIALIZED_NAME_NT_U_PERIOD1)
  private NtUPeriod1Enum ntUPeriod1;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD1_LIMIT = "NTUInPeriod1Limit";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD1_LIMIT)
  private Integer ntUInPeriod1Limit;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD1_TOKENS = "NTUInPeriod1Tokens";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD1_TOKENS)
  private Integer ntUInPeriod1Tokens;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD1_KEYWORDS = "NTUInPeriod1Keywords";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD1_KEYWORDS)
  private Integer ntUInPeriod1Keywords;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD1_ENTITIES = "NTUInPeriod1Entities";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD1_ENTITIES)
  private Integer ntUInPeriod1Entities;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD1_LANGUAGES = "NTUInPeriod1Languages";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD1_LANGUAGES)
  private Integer ntUInPeriod1Languages;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD1_SENTIMENTS = "NTUInPeriod1Sentiments";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD1_SENTIMENTS)
  private Integer ntUInPeriod1Sentiments;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD1_FACTS = "NTUInPeriod1Facts";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD1_FACTS)
  private Integer ntUInPeriod1Facts;

  public PerOperationLimitPeriodic1Response ntUPeriod1(NtUPeriod1Enum ntUPeriod1) {
    this.ntUPeriod1 = ntUPeriod1;
    return this;
  }

   /**
   * A period when limitations apply
   * @return ntUPeriod1
  **/
  @ApiModelProperty(value = "A period when limitations apply")
  public NtUPeriod1Enum getNtUPeriod1() {
    return ntUPeriod1;
  }

  public void setNtUPeriod1(NtUPeriod1Enum ntUPeriod1) {
    this.ntUPeriod1 = ntUPeriod1;
  }

  public PerOperationLimitPeriodic1Response ntUInPeriod1Limit(Integer ntUInPeriod1Limit) {
    this.ntUInPeriod1Limit = ntUInPeriod1Limit;
    return this;
  }

   /**
   * A maximum number of requests in the specified period
   * @return ntUInPeriod1Limit
  **/
  @ApiModelProperty(value = "A maximum number of requests in the specified period")
  public Integer getNtUInPeriod1Limit() {
    return ntUInPeriod1Limit;
  }

  public void setNtUInPeriod1Limit(Integer ntUInPeriod1Limit) {
    this.ntUInPeriod1Limit = ntUInPeriod1Limit;
  }

  public PerOperationLimitPeriodic1Response ntUInPeriod1Tokens(Integer ntUInPeriod1Tokens) {
    this.ntUInPeriod1Tokens = ntUInPeriod1Tokens;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Text parsing
   * @return ntUInPeriod1Tokens
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Text parsing")
  public Integer getNtUInPeriod1Tokens() {
    return ntUInPeriod1Tokens;
  }

  public void setNtUInPeriod1Tokens(Integer ntUInPeriod1Tokens) {
    this.ntUInPeriod1Tokens = ntUInPeriod1Tokens;
  }

  public PerOperationLimitPeriodic1Response ntUInPeriod1Keywords(Integer ntUInPeriod1Keywords) {
    this.ntUInPeriod1Keywords = ntUInPeriod1Keywords;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Keywords extraction
   * @return ntUInPeriod1Keywords
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Keywords extraction")
  public Integer getNtUInPeriod1Keywords() {
    return ntUInPeriod1Keywords;
  }

  public void setNtUInPeriod1Keywords(Integer ntUInPeriod1Keywords) {
    this.ntUInPeriod1Keywords = ntUInPeriod1Keywords;
  }

  public PerOperationLimitPeriodic1Response ntUInPeriod1Entities(Integer ntUInPeriod1Entities) {
    this.ntUInPeriod1Entities = ntUInPeriod1Entities;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Entities extraction
   * @return ntUInPeriod1Entities
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Entities extraction")
  public Integer getNtUInPeriod1Entities() {
    return ntUInPeriod1Entities;
  }

  public void setNtUInPeriod1Entities(Integer ntUInPeriod1Entities) {
    this.ntUInPeriod1Entities = ntUInPeriod1Entities;
  }

  public PerOperationLimitPeriodic1Response ntUInPeriod1Languages(Integer ntUInPeriod1Languages) {
    this.ntUInPeriod1Languages = ntUInPeriod1Languages;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Language detection
   * @return ntUInPeriod1Languages
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Language detection")
  public Integer getNtUInPeriod1Languages() {
    return ntUInPeriod1Languages;
  }

  public void setNtUInPeriod1Languages(Integer ntUInPeriod1Languages) {
    this.ntUInPeriod1Languages = ntUInPeriod1Languages;
  }

  public PerOperationLimitPeriodic1Response ntUInPeriod1Sentiments(Integer ntUInPeriod1Sentiments) {
    this.ntUInPeriod1Sentiments = ntUInPeriod1Sentiments;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Sentiments analysis
   * @return ntUInPeriod1Sentiments
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Sentiments analysis")
  public Integer getNtUInPeriod1Sentiments() {
    return ntUInPeriod1Sentiments;
  }

  public void setNtUInPeriod1Sentiments(Integer ntUInPeriod1Sentiments) {
    this.ntUInPeriod1Sentiments = ntUInPeriod1Sentiments;
  }

  public PerOperationLimitPeriodic1Response ntUInPeriod1Facts(Integer ntUInPeriod1Facts) {
    this.ntUInPeriod1Facts = ntUInPeriod1Facts;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Facts extraction
   * @return ntUInPeriod1Facts
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Facts extraction")
  public Integer getNtUInPeriod1Facts() {
    return ntUInPeriod1Facts;
  }

  public void setNtUInPeriod1Facts(Integer ntUInPeriod1Facts) {
    this.ntUInPeriod1Facts = ntUInPeriod1Facts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerOperationLimitPeriodic1Response perOperationLimitPeriodic1Response = (PerOperationLimitPeriodic1Response) o;
    return Objects.equals(this.ntUPeriod1, perOperationLimitPeriodic1Response.ntUPeriod1) &&
        Objects.equals(this.ntUInPeriod1Limit, perOperationLimitPeriodic1Response.ntUInPeriod1Limit) &&
        Objects.equals(this.ntUInPeriod1Tokens, perOperationLimitPeriodic1Response.ntUInPeriod1Tokens) &&
        Objects.equals(this.ntUInPeriod1Keywords, perOperationLimitPeriodic1Response.ntUInPeriod1Keywords) &&
        Objects.equals(this.ntUInPeriod1Entities, perOperationLimitPeriodic1Response.ntUInPeriod1Entities) &&
        Objects.equals(this.ntUInPeriod1Languages, perOperationLimitPeriodic1Response.ntUInPeriod1Languages) &&
        Objects.equals(this.ntUInPeriod1Sentiments, perOperationLimitPeriodic1Response.ntUInPeriod1Sentiments) &&
        Objects.equals(this.ntUInPeriod1Facts, perOperationLimitPeriodic1Response.ntUInPeriod1Facts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ntUPeriod1, ntUInPeriod1Limit, ntUInPeriod1Tokens, ntUInPeriod1Keywords, ntUInPeriod1Entities, ntUInPeriod1Languages, ntUInPeriod1Sentiments, ntUInPeriod1Facts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerOperationLimitPeriodic1Response {\n");
    
    sb.append("    ntUPeriod1: ").append(toIndentedString(ntUPeriod1)).append("\n");
    sb.append("    ntUInPeriod1Limit: ").append(toIndentedString(ntUInPeriod1Limit)).append("\n");
    sb.append("    ntUInPeriod1Tokens: ").append(toIndentedString(ntUInPeriod1Tokens)).append("\n");
    sb.append("    ntUInPeriod1Keywords: ").append(toIndentedString(ntUInPeriod1Keywords)).append("\n");
    sb.append("    ntUInPeriod1Entities: ").append(toIndentedString(ntUInPeriod1Entities)).append("\n");
    sb.append("    ntUInPeriod1Languages: ").append(toIndentedString(ntUInPeriod1Languages)).append("\n");
    sb.append("    ntUInPeriod1Sentiments: ").append(toIndentedString(ntUInPeriod1Sentiments)).append("\n");
    sb.append("    ntUInPeriod1Facts: ").append(toIndentedString(ntUInPeriod1Facts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

