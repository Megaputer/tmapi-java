/*
 * Megaputer Text Mining API
 * Megaputer Text Mining API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tmapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PerOperationLimitPeriodic2Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-20T13:29:48.384+03:00[Europe/Moscow]")
public class PerOperationLimitPeriodic2Response {
  /**
   * A period when limitations apply
   */
  @JsonAdapter(NtUPeriod2Enum.Adapter.class)
  public enum NtUPeriod2Enum {
    SECOND("Second"),
    
    MINUTE("Minute"),
    
    HOUR("Hour"),
    
    DAY("Day"),
    
    MONTH("Month");

    private String value;

    NtUPeriod2Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NtUPeriod2Enum fromValue(String text) {
      for (NtUPeriod2Enum b : NtUPeriod2Enum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<NtUPeriod2Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NtUPeriod2Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NtUPeriod2Enum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return NtUPeriod2Enum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_NT_U_PERIOD2 = "NTUPeriod2";
  @SerializedName(SERIALIZED_NAME_NT_U_PERIOD2)
  private NtUPeriod2Enum ntUPeriod2;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD2_LIMIT = "NTUInPeriod2Limit";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD2_LIMIT)
  private Integer ntUInPeriod2Limit;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD2_TOKENS = "NTUInPeriod2Tokens";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD2_TOKENS)
  private Integer ntUInPeriod2Tokens;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD2_KEYWORDS = "NTUInPeriod2Keywords";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD2_KEYWORDS)
  private Integer ntUInPeriod2Keywords;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD2_ENTITIES = "NTUInPeriod2Entities";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD2_ENTITIES)
  private Integer ntUInPeriod2Entities;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD2_LANGUAGES = "NTUInPeriod2Languages";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD2_LANGUAGES)
  private Integer ntUInPeriod2Languages;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD2_SENTIMENTS = "NTUInPeriod2Sentiments";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD2_SENTIMENTS)
  private Integer ntUInPeriod2Sentiments;

  public static final String SERIALIZED_NAME_NT_U_IN_PERIOD2_FACTS = "NTUInPeriod2Facts";
  @SerializedName(SERIALIZED_NAME_NT_U_IN_PERIOD2_FACTS)
  private Integer ntUInPeriod2Facts;

  public PerOperationLimitPeriodic2Response ntUPeriod2(NtUPeriod2Enum ntUPeriod2) {
    this.ntUPeriod2 = ntUPeriod2;
    return this;
  }

   /**
   * A period when limitations apply
   * @return ntUPeriod2
  **/
  @ApiModelProperty(value = "A period when limitations apply")
  public NtUPeriod2Enum getNtUPeriod2() {
    return ntUPeriod2;
  }

  public void setNtUPeriod2(NtUPeriod2Enum ntUPeriod2) {
    this.ntUPeriod2 = ntUPeriod2;
  }

  public PerOperationLimitPeriodic2Response ntUInPeriod2Limit(Integer ntUInPeriod2Limit) {
    this.ntUInPeriod2Limit = ntUInPeriod2Limit;
    return this;
  }

   /**
   * A maximum number of requests in the specified period
   * @return ntUInPeriod2Limit
  **/
  @ApiModelProperty(value = "A maximum number of requests in the specified period")
  public Integer getNtUInPeriod2Limit() {
    return ntUInPeriod2Limit;
  }

  public void setNtUInPeriod2Limit(Integer ntUInPeriod2Limit) {
    this.ntUInPeriod2Limit = ntUInPeriod2Limit;
  }

  public PerOperationLimitPeriodic2Response ntUInPeriod2Tokens(Integer ntUInPeriod2Tokens) {
    this.ntUInPeriod2Tokens = ntUInPeriod2Tokens;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Text parsing
   * @return ntUInPeriod2Tokens
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Text parsing")
  public Integer getNtUInPeriod2Tokens() {
    return ntUInPeriod2Tokens;
  }

  public void setNtUInPeriod2Tokens(Integer ntUInPeriod2Tokens) {
    this.ntUInPeriod2Tokens = ntUInPeriod2Tokens;
  }

  public PerOperationLimitPeriodic2Response ntUInPeriod2Keywords(Integer ntUInPeriod2Keywords) {
    this.ntUInPeriod2Keywords = ntUInPeriod2Keywords;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Keywords extraction
   * @return ntUInPeriod2Keywords
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Keywords extraction")
  public Integer getNtUInPeriod2Keywords() {
    return ntUInPeriod2Keywords;
  }

  public void setNtUInPeriod2Keywords(Integer ntUInPeriod2Keywords) {
    this.ntUInPeriod2Keywords = ntUInPeriod2Keywords;
  }

  public PerOperationLimitPeriodic2Response ntUInPeriod2Entities(Integer ntUInPeriod2Entities) {
    this.ntUInPeriod2Entities = ntUInPeriod2Entities;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Entities extraction
   * @return ntUInPeriod2Entities
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Entities extraction")
  public Integer getNtUInPeriod2Entities() {
    return ntUInPeriod2Entities;
  }

  public void setNtUInPeriod2Entities(Integer ntUInPeriod2Entities) {
    this.ntUInPeriod2Entities = ntUInPeriod2Entities;
  }

  public PerOperationLimitPeriodic2Response ntUInPeriod2Languages(Integer ntUInPeriod2Languages) {
    this.ntUInPeriod2Languages = ntUInPeriod2Languages;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Language detection
   * @return ntUInPeriod2Languages
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Language detection")
  public Integer getNtUInPeriod2Languages() {
    return ntUInPeriod2Languages;
  }

  public void setNtUInPeriod2Languages(Integer ntUInPeriod2Languages) {
    this.ntUInPeriod2Languages = ntUInPeriod2Languages;
  }

  public PerOperationLimitPeriodic2Response ntUInPeriod2Sentiments(Integer ntUInPeriod2Sentiments) {
    this.ntUInPeriod2Sentiments = ntUInPeriod2Sentiments;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Sentiments analysis
   * @return ntUInPeriod2Sentiments
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Sentiments analysis")
  public Integer getNtUInPeriod2Sentiments() {
    return ntUInPeriod2Sentiments;
  }

  public void setNtUInPeriod2Sentiments(Integer ntUInPeriod2Sentiments) {
    this.ntUInPeriod2Sentiments = ntUInPeriod2Sentiments;
  }

  public PerOperationLimitPeriodic2Response ntUInPeriod2Facts(Integer ntUInPeriod2Facts) {
    this.ntUInPeriod2Facts = ntUInPeriod2Facts;
    return this;
  }

   /**
   * A number of requests that have already been processed for operation Facts extraction
   * @return ntUInPeriod2Facts
  **/
  @ApiModelProperty(value = "A number of requests that have already been processed for operation Facts extraction")
  public Integer getNtUInPeriod2Facts() {
    return ntUInPeriod2Facts;
  }

  public void setNtUInPeriod2Facts(Integer ntUInPeriod2Facts) {
    this.ntUInPeriod2Facts = ntUInPeriod2Facts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerOperationLimitPeriodic2Response perOperationLimitPeriodic2Response = (PerOperationLimitPeriodic2Response) o;
    return Objects.equals(this.ntUPeriod2, perOperationLimitPeriodic2Response.ntUPeriod2) &&
        Objects.equals(this.ntUInPeriod2Limit, perOperationLimitPeriodic2Response.ntUInPeriod2Limit) &&
        Objects.equals(this.ntUInPeriod2Tokens, perOperationLimitPeriodic2Response.ntUInPeriod2Tokens) &&
        Objects.equals(this.ntUInPeriod2Keywords, perOperationLimitPeriodic2Response.ntUInPeriod2Keywords) &&
        Objects.equals(this.ntUInPeriod2Entities, perOperationLimitPeriodic2Response.ntUInPeriod2Entities) &&
        Objects.equals(this.ntUInPeriod2Languages, perOperationLimitPeriodic2Response.ntUInPeriod2Languages) &&
        Objects.equals(this.ntUInPeriod2Sentiments, perOperationLimitPeriodic2Response.ntUInPeriod2Sentiments) &&
        Objects.equals(this.ntUInPeriod2Facts, perOperationLimitPeriodic2Response.ntUInPeriod2Facts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ntUPeriod2, ntUInPeriod2Limit, ntUInPeriod2Tokens, ntUInPeriod2Keywords, ntUInPeriod2Entities, ntUInPeriod2Languages, ntUInPeriod2Sentiments, ntUInPeriod2Facts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerOperationLimitPeriodic2Response {\n");
    
    sb.append("    ntUPeriod2: ").append(toIndentedString(ntUPeriod2)).append("\n");
    sb.append("    ntUInPeriod2Limit: ").append(toIndentedString(ntUInPeriod2Limit)).append("\n");
    sb.append("    ntUInPeriod2Tokens: ").append(toIndentedString(ntUInPeriod2Tokens)).append("\n");
    sb.append("    ntUInPeriod2Keywords: ").append(toIndentedString(ntUInPeriod2Keywords)).append("\n");
    sb.append("    ntUInPeriod2Entities: ").append(toIndentedString(ntUInPeriod2Entities)).append("\n");
    sb.append("    ntUInPeriod2Languages: ").append(toIndentedString(ntUInPeriod2Languages)).append("\n");
    sb.append("    ntUInPeriod2Sentiments: ").append(toIndentedString(ntUInPeriod2Sentiments)).append("\n");
    sb.append("    ntUInPeriod2Facts: ").append(toIndentedString(ntUInPeriod2Facts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

